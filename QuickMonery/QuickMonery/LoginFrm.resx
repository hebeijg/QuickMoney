<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BigJ5/4HVG0EmQE27zUAAAAASUVORK5CYII=
</value>
  </data>
</root>